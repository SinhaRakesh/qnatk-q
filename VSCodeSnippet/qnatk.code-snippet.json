{
	"snippet qnatk q useform script": {
		"prefix": "qnatk q useform",
		"body": [
			"import { useQuasar } from 'quasar';",
			"import { ref } from 'vue';",
			"",
			"const $q = useQuasar();",
			"",
			"const props = defineProps({",
			"action: {type: Object,required: true},",
			"closeDialog: {type: Function,required: true},",
			"record: {type: ${2:record_DTO},required: true},",
			"model: {type: String},",
			"});",
			"let url = '${1:useform_endpoint}';",
			"let initialValues = new ${2:record_DTO}()",
			"if (props.record.id) {",
			"initialValues = { ...initialValues, ...props.record };",
			"}",
			"const { values, errors, isLoading, validateAndSubmit, callbacks, updateUrl } = ${3:use_form_class}(url, initialValues, 'post');",
			"",
			"callbacks.onSuccess = (data) => { props.closeDialog(); return data; }",
			"",
			"callbacks.beforeSubmit = (data: typeof values.value) => {console.log(data);return data;};",
			"",
			"$0"
		],
		"description": "script only"
	},
	"snippet qnatk q form html": {
		"prefix": "qnatk q form html",
		"body": [
			"<q-form @submit.prevent='validateAndSubmit' class='q-gutter-md'>",
			"<q-card-section>",
			"<h1 class=\"text-h6\">Add Partner</h1>",
			"</q-card-section>",
			"<q-card-section>",
			"<div class=\"row q-col-gutter-md\">",
			"<div class=\"col-6 q-pl-md\">",
			"<alphabeticInput v-model=\"values.lastName\" label=\"lastName\" />",
			"</div>",
			"</div>",
			"<div class=\"row justify-end q-pt-md\">",
			"<q-btn class=\"q-mr-md\" size=\"md\" :loading=\"isLoading\" label=\"Submit\" color=\"primary\" type=\"submit\" />",
			"<q-btn :loading=\"isLoading\" label=\"Cancle\" color=\"primary\" v-close-popup=\"true\" />",
			"</div>",
			"</q-card-section>",
			"</q-form>"
		],
		"description": ""
	},
	"snippet qnatk q simple add form": {
		"prefix": "qnatk simple add form",
		"body": [
			"<template>",
			"<simple-form :init-data='record' :form-config='formConfig'>",
			"<template #title>",
			" <div class='text-h5'>Create ${3:modelName}</div>",
			"</template>",
			"</simple-form>",
			"</template>",
			"<script setup lang='ts'>",
			"import SimpleForm from 'src/qnatk/components/SimpleForm.vue';",
			"import { FormConfig, FormField } from 'src/qnatk/form-builder-interface';",
			"",
			"",
			"const props = defineProps({",
			"   action: {",
			"    type: Object,",
			"    required: true",
			"},",
			"  closeDialog:{",
			"     type:Function,",
			"    required:true",
			"},",
			"   record:{",
			"     type:Object,",
			"     required:true",
			"},",
			"   model:{",
			"      type:String,",
			"      required:true",
			"},",
			"});",
			"const formConfig: FormConfig = {",
			"    api: () => ${1:api},",
			"    submitUrl: () =>",
			"          '${2:qnatkName}/${3:modelName}/create',",
			"",
			" formFields: [",
			" {",
			"fieldId: '${4:fieldName}',",
			" component: ${5:componentName},",
			"colClass: 'col-6',",
			"",
			"props: {",
			"dense: true,",
			" label: '${6:labelName}',",
			" rules: [(val: string) => !!val || '${4:fieldName}  is required'],",
			" },",
			"dataField: '${4:fieldName}',",
			"},",
			",",
			"",
			"].filter(Boolean) as FormField[],",
			"",
			"",
			"callbacks:{",
			"  onSuccess: () => {",
			"props.closeDialog();",
			"    },",
			"  },",
			"};",
			"</script>"
		],
		"description": "Snippet full addform sample"
	},
	"snippet qnatk q simple edit form": {
		"prefix": "qnatk simple edit form",
		"body": [
			"<template>",
			"<simple-form :init-data='record' :form-config='formConfig'>",
			"<template #title>",
			" <div class='text-h5'>Edit ${3:modelName}</div>",
			"</template>",
			"</simple-form>",
			"</template>",
			"<script setup lang='ts'>",
			"import SimpleForm from 'src/qnatk/components/SimpleForm.vue';",
			"import { FormConfig, FormField } from 'src/qnatk/form-builder-interface';",
			"",
			"",
			"const props = defineProps({",
			"  action: {",
			"    type: Object,",
			"    required: true",
			"},",
			"  closeDialog:{",
			"    type:Function,",
			"    required:true",
			"},",
			"  record:{",
			"     type:Object,",
			"     required:true",
			"},",
			"  model:{",
			"     type:String,",
			"      required:true",
			"},",
			"});",
			"",
			"",
			"",
			"const formConfig: FormConfig = {",
			"    api: () => ${1:api},",
			"    submitUrl: () =>",
			"          '${2:qnatkName}/${3:modelName}/update/${props.record.id}',",
			"",
			"formFields: [",
			"{",
			"fieldId: '${4:fieldName}',",
			" component: ${5:componentName},",
			"colClass: 'col-6',",
			"",
			"props: {",
			"dense: true,",
			" label: '${6:labelName}',",
			" rules: [(val: string) => !!val || '${4:fieldName}  is required'],",
			" },",
			"dataField: '${4:fieldName}',",
			"},",
			"",
			"].filter(Boolean) as FormField[],",
			"",
			"",
			"callbacks:{",
			"  onSuccess: () => {",
			"props.closeDialog();",
			"    },",
			"  },",
			"};",
			"</script>"
		],
		"description": "snippet, edit form"
	},
	"snippet qnatk q crud": {
		"prefix": "qnatk  use datatable",
		"body": [
			"<template>",
			"  <q-page class='q-ma-sm color'>",
			"     <q-table",
			"        title='${1:modelName}'",
			"        :rows='data'",
			"        :columns='columns'",
			"        v-model:pagination='pagination'",
			"        @request='onRequest'",
			">",
			"<template #top-right>",
			"   <NoRecordActions",
			"    :actions='actions'",
			"    base-model='${1:modelName}'",
			"    :api='() => ${2:api}'",
			">",
			"<FilterMenu",
			"v-model:fetch-data-function='fetchData'",
			"v-model:fetch-options='fetchOptions'",
			"v-model:filter-options='filterOptions'",
			"v-show='!loading'",
			"/>",
			" <template #addNew='{ action, closeDialog }'>",
			"<${3:addformcomponent}",
			":action='action'",
			":close-dialog='closeDialog'",
			"@action-completed='fetchData'",
			" :record='{}'",
			" />",
			" </template>",
			" </NoRecordActions>",
			"</template>",
			"<template #body-cell-actions='props'>",
			" <q-td key='action' :props='props'>",
			"<SingleRecordActions",
			"    :record='props.row'",
			"    :actions='actions'",
			"    base-model='${1:modelName}'",
			"    :api='() => ${2:api}'",
			">",
			"<template #edit='{ action, closeDialog }'>",
			" <${4:editformcomponent}",
			":action='action'",
			":close-dialog='closeDialog'",
			"@action-completed='fetchData'",
			" :record='{}'",
			" />",
			"</template>",
			"</SingleRecordActions>",
			"</q-td>",
			"</template>",
			" </q-table>",
			"</q-page>",
			"</template>",
			"<script setup lang='ts'>",
			"import NoRecordActions from 'src/qnatk/components/NoRecordActions.vue';",
			"import SingleRecordActions from 'src/qnatk/components/SingleRecordActions.vue';",
			"import FilterMenu from 'src/qnatk/components/FilterMenu.vue';",
			"import { useUserStore } from 'src/stores/user-store';",
			"import { onMounted, ref } from 'vue';",
			"import {  QTableColumn } from 'quasar';",
			"",
			"const { data, fetchOptions, fetchData, actions, pagination, onRequest } =",
			" ${5:usedatatable(${1:modelName});",
			"",
			"const userStore = useUserStore();",
			"",
			"fetchOptions.value = {",
			"    attributes:[",
			"    '', ",
			"],",
			"where:{",
			"},",
			"},",
			"};",
			"",
			"onMounted(() => {",
			"    fetchData();",
			"});",
			"",
			"const filterOptions: FilterOption[] = [",
			"{",
			"  fieldId: '${6:fieldName}',",
			"  component: ${7:componentName},",
			"  type:'${8:type}',",
			"  props: {",
			"     dense: true,",
			"     label: '${9:labelName}',",
			"     where: (val: string) => ({",
			"      $$or: {",
			"          ${6:fieldName}: { $like: `%$${val}%` },",
			"  },",
			"    }),",
			"    labelFieldName: '${6:fieldName}',",
			"    valueFieldName: '${6:fieldName}',",
			"},",
			"operators: ['$eq'],",
			"currentOperator: '$eq',",
			"where: {",
			"    $or: {",
			"       ${6:fieldName}:{ $$op$$: '$$value$$' },",
			"   },",
			" },",
			"   }",
			"]",
			"const columns: QTableColumn[] = [",
			"{",
			"    name: '${6:fieldName}',",
			"    label: '${6:fieldName}',",
			"    align: 'left',",
			"    field: '${6:fieldName}',",
			"    sortable: true,",
			"},",
			"];",
			"</script>"
		],
		"description": "Snippet Qnatk CRUD Sample"
	}
}